package th.go.sso.newcore.cont.refund.inquiry.dao.mapper;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.jdbc.core.RowMapper;
import org.springframework.lang.NonNull;

import th.go.sso.newcore.cont.refund.inquiry.bean.ConTbRefundRequestChangeBean;

public class ConTbRefundRequestChangeRowMapper implements RowMapper<ConTbRefundRequestChangeBean> {
    @Override
    public ConTbRefundRequestChangeBean mapRow(@NonNull ResultSet rs, int rowNum)  throws SQLException {
        ConTbRefundRequestChangeBean bean = new ConTbRefundRequestChangeBean();
        bean.setRefundRequestChangeId(rs.getLong("REFUND_REQUEST_CHANGE_ID"));
        bean.setRefundRequestChangeTypeId(rs.getLong("REFUND_REQUEST_CHANGE_TYPE_ID"));
        bean.setReceiveNo(rs.getString("RECEIVE_NO"));
        bean.setReceiveDate(rs.getDate("RECEIVE_DATE"));
        bean.setNoticeNo(rs.getString("NOTICE_NO"));
        bean.setNoticeDate(rs.getDate("NOTICE_DATE"));
        bean.setPayDate(rs.getDate("PAY_DATE"));
        bean.setRefundPromptPay(rs.getString("REFUND_PROMPT_PAY"));
        bean.setRefundPoOrder(rs.getString("REFUND_PO_ORDER"));
        bean.setRefundBankAccount(rs.getString("REFUND_BANK_ACCOUNT"));
        bean.setRefundTypePlace(rs.getString("REFUND_TYPE_PLACE"));
        bean.setRefundTransferBank(rs.getString("REFUND_TRANSFER_BANK"));
        bean.setRefundTransferDate(rs.getDate("REFUND_TRANSFER_DATE"));
        bean.setRequestReasonCode(rs.getString("REQUEST_REASON_CODE"));
        bean.setRequestReasonOther(rs.getString("REQUEST_REASON_OTHER"));
        bean.setApproveNo(rs.getString("APPROVE_NO"));
        bean.setApproveDate(rs.getDate("APPROVE_DATE"));
        bean.setApproveStatus(rs.getString("APPROVE_STATUS"));
        bean.setNoticeStatus(rs.getString("NOTICE_STATUS"));
        bean.setAnnounceStatus(rs.getString("ANNOUNCE_STATUS"));
        bean.setRefundRemark(rs.getString("REFUND_REMARK"));
        bean.setRequestType(rs.getString("REQUEST_TYPE"));
        bean.setRequestChannel(rs.getString("REQUEST_CHANNEL"));
        bean.setDisapproveReason(rs.getString("DISAPPROVE_REASON"));
        bean.setReplyDate(rs.getDate("REPLY_DATE"));
        bean.setRecordApproveDate(rs.getDate("RECORD_APPROVE_DATE"));
        bean.setRecordApproveBy(rs.getString("RECORD_APPROVE_BY"));
        bean.setNoticeArDate(rs.getDate("NOTICE_AR_DATE"));
        bean.setAnnounceArDate(rs.getDate("ANNOUNCE_AR_DATE"));
        bean.setAnnounceNo(rs.getString("ANNOUNCE_NO"));
        bean.setAnnounceDate(rs.getDate("ANNOUNCE_DATE"));
        bean.setAnnounceCreateBy(rs.getString("ANNOUNCE_CREATE_BY"));
        bean.setAnnounceArCreateBy(rs.getString("ANNOUNCE_AR_CREATE_BY"));
        bean.setAnnounceCreateDate(rs.getDate("ANNOUNCE_CREATE_DATE"));
        bean.setAnnounceArCreateDate(rs.getDate("ANNOUNCE_AR_CREATE_DATE"));
        bean.setCancelApproveDate(rs.getDate("CANCEL_APPROVE_DATE"));
        bean.setRefundFlag(rs.getString("REFUND_FLAG"));
        bean.setDistCode(rs.getString("DIST_CODE"));
        bean.setSubdistCode(rs.getString("SUBDIST_CODE"));
        bean.setProvinceCode(rs.getString("PROVINCE_CODE"));
        bean.setZipCode(rs.getString("ZIP_CODE"));
        bean.setDepartmentReceiveCode(rs.getString("DEPARTMENT_RECEIVE_CODE"));
        bean.setDepartmentResponsibleCode(rs.getString("DEPARTMENT_RESPONSIBLE_CODE"));
        bean.setRefundBankCode(rs.getString("REFUND_BANK_CODE"));
        bean.setRefundBankBranchCode(rs.getString("REFUND_BANK_BRANCH_CODE"));
        bean.setEligibleFlag(rs.getString("ELIGIBLE_FLAG"));
        bean.setReceiveNoChange(rs.getString("RECEIVE_NO_CHANGE"));
        bean.setReceiveDateChange(rs.getDate("RECEIVE_DATE_CHANGE"));
        bean.setNoticeNoChange(rs.getString("NOTICE_NO_CHANGE"));
        bean.setNoticeDateChange(rs.getDate("NOTICE_DATE_CHANGE"));
        bean.setPayDateChange(rs.getDate("PAY_DATE_CHANGE"));
        bean.setRefundPromptPayChange(rs.getString("REFUND_PROMPT_PAY_CHANGE"));
        bean.setRefundPoOrderChange(rs.getString("REFUND_PO_ORDER_CHANGE"));
        bean.setRefundBankAccountChange(rs.getString("REFUND_BANK_ACCOUNT_CHANGE"));
        bean.setRefundTypePlaceChange(rs.getString("REFUND_TYPE_PLACE_CHANGE"));
        bean.setRefundTransferBankChange(rs.getString("REFUND_TRANSFER_BANK_CHANGE"));
        bean.setRefundTransferDateChange(rs.getDate("REFUND_TRANSFER_DATE_CHANGE"));
        bean.setRequestReasonCodeChange(rs.getString("REQUEST_REASON_CODE_CHANGE"));
        bean.setRequestReasonOtherChange(rs.getString("REQUEST_REASON_OTHER_CHANGE"));
        bean.setApproveNoChange(rs.getString("APPROVE_NO_CHANGE"));
        bean.setApproveDateChange(rs.getDate("APPROVE_DATE_CHANGE"));
        bean.setApproveStatusChange(rs.getString("APPROVE_STATUS_CHANGE"));
        bean.setNoticeStatusChange(rs.getString("NOTICE_STATUS_CHANGE"));
        bean.setAnnounceStatusChange(rs.getString("ANNOUNCE_STATUS_CHANGE"));
        bean.setRefundRemarkChange(rs.getString("REFUND_REMARK_CHANGE"));
        bean.setRequestTypeChange(rs.getString("REQUEST_TYPE_CHANGE"));
        bean.setRequestChannelChange(rs.getString("REQUEST_CHANNEL_CHANGE"));
        bean.setDisapproveReasonChange(rs.getString("DISAPPROVE_REASON_CHANGE"));
        bean.setReplyDateChange(rs.getDate("REPLY_DATE_CHANGE"));
        bean.setRecordApproveDateChange(rs.getDate("RECORD_APPROVE_DATE_CHANGE"));
        bean.setRecordApproveByChange(rs.getString("RECORD_APPROVE_BY_CHANGE"));
        bean.setNoticeArDateChange(rs.getDate("NOTICE_AR_DATE_CHANGE"));
        bean.setAnnounceArDateChange(rs.getDate("ANNOUNCE_AR_DATE_CHANGE"));
        bean.setAnnounceNoChange(rs.getString("ANNOUNCE_NO_CHANGE"));
        bean.setAnnounceDateChange(rs.getDate("ANNOUNCE_DATE_CHANGE"));
        bean.setAnnounceCreateByChange(rs.getString("ANNOUNCE_CREATE_BY_CHANGE"));
        bean.setAnnounceArCreateByChange(rs.getString("ANNOUNCE_AR_CREATE_BY_CHANGE"));
        bean.setAnnounceCreateDateChange(rs.getDate("ANNOUNCE_CREATE_DATE_CHANGE"));
        bean.setAnnounceArCreateDateChange(rs.getDate("ANNOUNCE_AR_CREATE_DATE_CHANGE"));
        bean.setCancelApproveDateChange(rs.getDate("CANCEL_APPROVE_DATE_CHANGE"));
        bean.setRefundFlagChange(rs.getString("REFUND_FLAG_CHANGE"));
        bean.setDistCodeChange(rs.getString("DIST_CODE_CHANGE"));
        bean.setSubdistCodeChange(rs.getString("SUBDIST_CODE_CHANGE"));
        bean.setProvinceCodeChange(rs.getString("PROVINCE_CODE_CHANGE"));
        bean.setZipCodeChange(rs.getString("ZIP_CODE_CHANGE"));
        bean.setDepartmentReceiveCodeChange(rs.getString("DEPARTMENT_RECEIVE_CODE_CHANGE"));
        bean.setDepartmentResponsibleCodeChange(rs.getString("DEPARTMENT_RESPONSIBLE_CODE_CHANGE"));
        bean.setRefundBankCodeChange(rs.getString("REFUND_BANK_CODE_CHANGE"));
        bean.setRefundBankBranchCodeChange(rs.getString("REFUND_BANK_BRANCH_CODE_CHANGE"));
        bean.setEligibleFlagChange(rs.getString("ELIGIBLE_FLAG_CHANGE"));
        bean.setRefundOperationCode(rs.getString("REFUND_OPERATION_CODE"));
        bean.setSourceDate(rs.getString("SOURCE_DATA"));
        bean.setManageBy(rs.getString("MANAGE_BY"));
        bean.setCreateBy(rs.getString("CREATE_BY"));
        bean.setCreateDate(rs.getDate("CREATE_DATE"));
        bean.setUpdateBy(rs.getString("UPDATE_BY"));
        bean.setUpdateDate(rs.getDate("UPDATE_DATE"));
        return bean;
    }
}
